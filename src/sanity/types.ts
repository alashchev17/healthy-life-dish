/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type HighlightText = Array<{
  children?: Array<{
    marks?: Array<string>;
    text?: string;
    _type: "span";
    _key: string;
  }>;
  style?: "normal";
  listItem?: never;
  markDefs?: null;
  level?: number;
  _type: "block";
  _key: string;
}>;

export type AudienceBlock = {
  _type: "audienceBlock";
  preview?: string;
  title?: string;
  audiences?: Array<{
    description?: string;
    image?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    _key: string;
  }>;
};

export type FreeProgram = {
  _type: "freeProgram";
  preview?: string;
  description?: HighlightText;
  button?: {
    text?: string;
    link?: string;
  };
};

export type PricingPlans = {
  _type: "pricingPlans";
  preview?: string;
  title?: string;
  durations?: Array<{
    title?: string;
    months?: number;
    isDefault?: boolean;
    _key: string;
  }>;
  currency?: "\u20AC" | "$" | "\xA3" | "\u20B4";
  planTypes?: Array<{
    id?: string;
    title?: string;
    isPopular?: boolean;
    basePrice?: number;
    features?: Array<{
      text?: string;
      included?: boolean;
      _key: string;
    }>;
    _key: string;
  }>;
  groupPlans?: Array<{
    people?: number;
    basePrice?: number;
    isDiscounted?: boolean;
    discountedPrice?: number;
    _key: string;
  }>;
};

export type SloganBlock = {
  _type: "sloganBlock";
  preview?: string;
  slogan?: HighlightText;
};

export type NumberedListWithImage = {
  _type: "numberedListWithImage";
  preview?: string;
  title?: string;
  style?: "active" | "secondary";
  items?: Array<{
    image?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    title?: string;
    description?: HighlightText;
    _key: string;
  }>;
};

export type NumberedList = {
  _type: "numberedList";
  preview?: string;
  title?: string;
  items?: Array<{
    title?: string;
    description?: HighlightText;
    _key: string;
  }>;
};

export type DetailedDescription = {
  _type: "detailedDescription";
  preview?: string;
  title?: string;
  description?: HighlightText;
};

export type AdvantagesSimple = {
  _type: "advantagesSimple";
  preview?: string;
  title?: string;
  advantages?: Array<{
    imageOnly?: boolean;
    title?: string;
    image?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    _key: string;
  }>;
};

export type AdvantagesDetailed = {
  _type: "advantagesDetailed";
  preview?: string;
  title?: string;
  advantages?: Array<{
    imageOnly?: boolean;
    title?: string;
    description?: string;
    image?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    _key: string;
  }>;
};

export type TranslationMetadata = {
  _id: string;
  _type: "translation.metadata";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  translations?: Array<{
    _key: string;
  } & InternationalizedArrayReferenceValue>;
  schemaTypes?: Array<string>;
};

export type InternationalizedArrayReferenceValue = {
  _type: "internationalizedArrayReferenceValue";
  value?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "hero";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "about";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "promo";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "reviews";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "reviewCard";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "programBuilder";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "footer";
  };
};

export type Footer = {
  _id: string;
  _type: "footer";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  language?: string;
  emailSubscription?: {
    title?: string;
    description?: string;
    emailPlaceholder?: string;
    callToAction?: {
      label?: string;
    };
    disclaimerText?: string;
  };
  copyrightText?: string;
};

export type ProgramBuilder = {
  _id: string;
  _type: "programBuilder";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  language?: string;
  title?: string;
  type?: "diet" | "training";
  imagery?: {
    splash?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    thumb?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
  };
  content?: Array<{
    _key: string;
  } & AdvantagesDetailed | {
    _key: string;
  } & AdvantagesSimple | {
    _key: string;
  } & DetailedDescription | {
    _key: string;
  } & NumberedList | {
    _key: string;
  } & NumberedListWithImage | {
    _key: string;
  } & SloganBlock | {
    _key: string;
  } & PricingPlans | {
    _key: string;
  } & FreeProgram | {
    _key: string;
  } & AudienceBlock>;
  seo?: {
    metaTitle?: string;
    metaDescription?: string;
    ogImage?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
  };
  slug?: Slug;
};

export type ReviewCard = {
  _id: string;
  _type: "reviewCard";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  language?: string;
  person?: {
    name?: string;
    surname?: string;
    occupation?: string;
    avatar?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
  };
  rating?: number;
  text?: string;
};

export type Reviews = {
  _id: string;
  _type: "reviews";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  language?: string;
  description?: HighlightText;
  reviews?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "reviewCard";
  }>;
};

export type Promo = {
  _id: string;
  _type: "promo";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  language?: string;
  slogan?: HighlightText;
};

export type About = {
  _id: string;
  _type: "about";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  language?: string;
  description?: HighlightText;
  callToAction?: {
    label?: string;
    action?: string;
  };
  cards?: Array<{
    title?: string;
    description?: string;
    image?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    _type: "aboutCard";
    _key: string;
  }>;
  slogan?: HighlightText;
};

export type Hero = {
  _id: string;
  _type: "hero";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  language?: string;
  slogan?: HighlightText;
};

export type InternationalizedArrayReference = Array<{
  _key: string;
} & InternationalizedArrayReferenceValue>;

export type SanityImagePaletteSwatch = {
  _type: "sanity.imagePaletteSwatch";
  background?: string;
  foreground?: string;
  population?: number;
  title?: string;
};

export type SanityImagePalette = {
  _type: "sanity.imagePalette";
  darkMuted?: SanityImagePaletteSwatch;
  lightVibrant?: SanityImagePaletteSwatch;
  darkVibrant?: SanityImagePaletteSwatch;
  vibrant?: SanityImagePaletteSwatch;
  dominant?: SanityImagePaletteSwatch;
  lightMuted?: SanityImagePaletteSwatch;
  muted?: SanityImagePaletteSwatch;
};

export type SanityImageDimensions = {
  _type: "sanity.imageDimensions";
  height?: number;
  width?: number;
  aspectRatio?: number;
};

export type SanityImageHotspot = {
  _type: "sanity.imageHotspot";
  x?: number;
  y?: number;
  height?: number;
  width?: number;
};

export type SanityImageCrop = {
  _type: "sanity.imageCrop";
  top?: number;
  bottom?: number;
  left?: number;
  right?: number;
};

export type SanityFileAsset = {
  _id: string;
  _type: "sanity.fileAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  source?: SanityAssetSourceData;
};

export type SanityImageAsset = {
  _id: string;
  _type: "sanity.imageAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  metadata?: SanityImageMetadata;
  source?: SanityAssetSourceData;
};

export type SanityImageMetadata = {
  _type: "sanity.imageMetadata";
  location?: Geopoint;
  dimensions?: SanityImageDimensions;
  palette?: SanityImagePalette;
  lqip?: string;
  blurHash?: string;
  hasAlpha?: boolean;
  isOpaque?: boolean;
};

export type Geopoint = {
  _type: "geopoint";
  lat?: number;
  lng?: number;
  alt?: number;
};

export type Slug = {
  _type: "slug";
  current?: string;
  source?: string;
};

export type SanityAssetSourceData = {
  _type: "sanity.assetSourceData";
  name?: string;
  id?: string;
  url?: string;
};

export type AllSanitySchemaTypes = HighlightText | AudienceBlock | FreeProgram | PricingPlans | SloganBlock | NumberedListWithImage | NumberedList | DetailedDescription | AdvantagesSimple | AdvantagesDetailed | TranslationMetadata | InternationalizedArrayReferenceValue | Footer | ProgramBuilder | ReviewCard | Reviews | Promo | About | Hero | InternationalizedArrayReference | SanityImagePaletteSwatch | SanityImagePalette | SanityImageDimensions | SanityImageHotspot | SanityImageCrop | SanityFileAsset | SanityImageAsset | SanityImageMetadata | Geopoint | Slug | SanityAssetSourceData;
export declare const internalGroqTypeReferenceTo: unique symbol;
// Source: ./src/sanity/lib/queries.ts
// Variable: LANDING_PAGE_QUERY
// Query: {  "hero": *[_type == "hero" && language == $language][0] {    _id,    _type,    _createdAt,    _updatedAt,    language,    slogan  },  "about": *[_type == "about" && language == $language][0] {    _id,    _type,    _createdAt,    _updatedAt,    language,    description,    callToAction,    cards[] {      _key,      _type,      title,      description,      image {        asset-> {          _id,          url,          metadata {            dimensions,            lqip,            palette          }        },        hotspot,        crop      }    },    slogan  },  "promo": *[_type == "promo" && language == $language][0] {    _id,    _type,    _createdAt,    _updatedAt,    language,    slogan  },  "reviews": *[_type == "reviews" && language == $language][0] {    _id,    _type,    _createdAt,    _updatedAt,    language,    description,    reviews[]-> {      _id,      _type,      language,      person {        name,        surname,        occupation,        avatar {          asset-> {            _id,            url,            metadata {              dimensions,              lqip,              palette            }          },          hotspot,          crop        }      },      rating,      text    }  }}
export type LANDING_PAGE_QUERYResult = {
  hero: {
    _id: string;
    _type: "hero";
    _createdAt: string;
    _updatedAt: string;
    language: string | null;
    slogan: HighlightText | null;
  } | null;
  about: {
    _id: string;
    _type: "about";
    _createdAt: string;
    _updatedAt: string;
    language: string | null;
    description: HighlightText | null;
    callToAction: {
      label?: string;
      action?: string;
    } | null;
    cards: Array<{
      _key: string;
      _type: "aboutCard";
      title: string | null;
      description: string | null;
      image: {
        asset: {
          _id: string;
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
            lqip: string | null;
            palette: SanityImagePalette | null;
          } | null;
        } | null;
        hotspot: SanityImageHotspot | null;
        crop: SanityImageCrop | null;
      } | null;
    }> | null;
    slogan: HighlightText | null;
  } | null;
  promo: {
    _id: string;
    _type: "promo";
    _createdAt: string;
    _updatedAt: string;
    language: string | null;
    slogan: HighlightText | null;
  } | null;
  reviews: {
    _id: string;
    _type: "reviews";
    _createdAt: string;
    _updatedAt: string;
    language: string | null;
    description: HighlightText | null;
    reviews: Array<{
      _id: string;
      _type: "reviewCard";
      language: string | null;
      person: {
        name: string | null;
        surname: string | null;
        occupation: string | null;
        avatar: {
          asset: {
            _id: string;
            url: string | null;
            metadata: {
              dimensions: SanityImageDimensions | null;
              lqip: string | null;
              palette: SanityImagePalette | null;
            } | null;
          } | null;
          hotspot: SanityImageHotspot | null;
          crop: SanityImageCrop | null;
        } | null;
      } | null;
      rating: number | null;
      text: string | null;
    }> | null;
  } | null;
};
// Variable: PROGRAM_BY_SLUG_QUERY
// Query: *[_type == "programBuilder" && slug.current == $slug && language == $language][0] {  _id,  _type,  _createdAt,  _updatedAt,  language,  title,  type,  slug,  seo {    metaTitle,    metaDescription,    ogImage {      asset-> {        _id,        url,        metadata {          dimensions,          lqip,          palette        }      },      hotspot,      crop    }  },  content[] {    _key,    _type,    preview,    title,        // AudienceBlock fields    _type == "audienceBlock" => {      audiences[] {        _key,        description,        image {          asset-> {            _id,            url,            metadata {              dimensions,              lqip,              palette            }          },          hotspot,          crop        }      }    },        // FreeProgram fields    _type == "freeProgram" => {      description,      button {        text,        link      }    },        // PricingPlans fields    _type == "pricingPlans" => {      durations[] {        _key,        title,        months,        isDefault      },      currency,      planTypes[] {        _key,        id,        title,        isPopular,        basePrice,        features[] {          _key,          text,          included        }      },      groupPlans[] {        _key,        people,        basePrice,        isDiscounted,        discountedPrice      }    },        // SloganBlock fields    _type == "sloganBlock" => {      slogan    },        // NumberedListWithImage fields    _type == "numberedListWithImage" => {      style,      items[] {        _key,        title,        description,        image {          asset-> {            _id,            url,            metadata {              dimensions,              lqip,              palette            }          },          hotspot,          crop        }      }    },        // NumberedList fields    _type == "numberedList" => {      items[] {        _key,        title,        description      }    },        // DetailedDescription fields    _type == "detailedDescription" => {      description    },        // AdvantagesSimple fields    _type == "advantagesSimple" => {      advantages[] {        _key,        imageOnly,        title,        image {          asset-> {            _id,            url,            metadata {              dimensions,              lqip,              palette            }          },          hotspot,          crop        }      }    },        // AdvantagesDetailed fields    _type == "advantagesDetailed" => {      advantages[] {        _key,        imageOnly,        title,        description,        image {          asset-> {            _id,            url,            metadata {              dimensions,              lqip,              palette            }          },          hotspot,          crop        }      }    }  }}
export type PROGRAM_BY_SLUG_QUERYResult = {
  _id: string;
  _type: "programBuilder";
  _createdAt: string;
  _updatedAt: string;
  language: string | null;
  title: string | null;
  type: "diet" | "training" | null;
  slug: Slug | null;
  seo: {
    metaTitle: string | null;
    metaDescription: string | null;
    ogImage: {
      asset: {
        _id: string;
        url: string | null;
        metadata: {
          dimensions: SanityImageDimensions | null;
          lqip: string | null;
          palette: SanityImagePalette | null;
        } | null;
      } | null;
      hotspot: SanityImageHotspot | null;
      crop: SanityImageCrop | null;
    } | null;
  } | null;
  content: Array<{
    _key: string;
    _type: "advantagesDetailed";
    preview: string | null;
    title: string | null;
    advantages: Array<{
      _key: string;
      imageOnly: boolean | null;
      title: string | null;
      description: string | null;
      image: {
        asset: {
          _id: string;
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
            lqip: string | null;
            palette: SanityImagePalette | null;
          } | null;
        } | null;
        hotspot: SanityImageHotspot | null;
        crop: SanityImageCrop | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "advantagesSimple";
    preview: string | null;
    title: string | null;
    advantages: Array<{
      _key: string;
      imageOnly: boolean | null;
      title: string | null;
      image: {
        asset: {
          _id: string;
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
            lqip: string | null;
            palette: SanityImagePalette | null;
          } | null;
        } | null;
        hotspot: SanityImageHotspot | null;
        crop: SanityImageCrop | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "audienceBlock";
    preview: string | null;
    title: string | null;
    audiences: Array<{
      _key: string;
      description: string | null;
      image: {
        asset: {
          _id: string;
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
            lqip: string | null;
            palette: SanityImagePalette | null;
          } | null;
        } | null;
        hotspot: SanityImageHotspot | null;
        crop: SanityImageCrop | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "detailedDescription";
    preview: string | null;
    title: string | null;
    description: HighlightText | null;
  } | {
    _key: string;
    _type: "freeProgram";
    preview: string | null;
    title: null;
    description: HighlightText | null;
    button: {
      text: string | null;
      link: string | null;
    } | null;
  } | {
    _key: string;
    _type: "numberedList";
    preview: string | null;
    title: string | null;
    items: Array<{
      _key: string;
      title: string | null;
      description: HighlightText | null;
    }> | null;
  } | {
    _key: string;
    _type: "numberedListWithImage";
    preview: string | null;
    title: string | null;
    style: "active" | "secondary" | null;
    items: Array<{
      _key: string;
      title: string | null;
      description: HighlightText | null;
      image: {
        asset: {
          _id: string;
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
            lqip: string | null;
            palette: SanityImagePalette | null;
          } | null;
        } | null;
        hotspot: SanityImageHotspot | null;
        crop: SanityImageCrop | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "pricingPlans";
    preview: string | null;
    title: string | null;
    durations: Array<{
      _key: string;
      title: string | null;
      months: number | null;
      isDefault: boolean | null;
    }> | null;
    currency: "$" | "\xA3" | "\u20AC" | "\u20B4" | null;
    planTypes: Array<{
      _key: string;
      id: string | null;
      title: string | null;
      isPopular: boolean | null;
      basePrice: number | null;
      features: Array<{
        _key: string;
        text: string | null;
        included: boolean | null;
      }> | null;
    }> | null;
    groupPlans: Array<{
      _key: string;
      people: number | null;
      basePrice: number | null;
      isDiscounted: boolean | null;
      discountedPrice: number | null;
    }> | null;
  } | {
    _key: string;
    _type: "sloganBlock";
    preview: string | null;
    title: null;
    slogan: HighlightText | null;
  }> | null;
} | null;
// Variable: ALL_PROGRAMS_QUERY
// Query: *[_type == "programBuilder" && language == $language] | order(_createdAt desc) {  _id,  _type,  _createdAt,  _updatedAt,  language,  title,  type,  slug,  seo {    metaTitle,    metaDescription,    ogImage {      asset-> {        _id,        url,        metadata {          dimensions,          lqip,          palette        }      },      hotspot,      crop    }  }}
export type ALL_PROGRAMS_QUERYResult = Array<{
  _id: string;
  _type: "programBuilder";
  _createdAt: string;
  _updatedAt: string;
  language: string | null;
  title: string | null;
  type: "diet" | "training" | null;
  slug: Slug | null;
  seo: {
    metaTitle: string | null;
    metaDescription: string | null;
    ogImage: {
      asset: {
        _id: string;
        url: string | null;
        metadata: {
          dimensions: SanityImageDimensions | null;
          lqip: string | null;
          palette: SanityImagePalette | null;
        } | null;
      } | null;
      hotspot: SanityImageHotspot | null;
      crop: SanityImageCrop | null;
    } | null;
  } | null;
}>;
// Variable: FOOTER_QUERY
// Query: *[_type == "footer" && language == $language] | order(_createdAt desc)[0] {  _id,  _type,  _createdAt,  _updatedAt,  language,  emailSubscription,  copyrightText}
export type FOOTER_QUERYResult = {
  _id: string;
  _type: "footer";
  _createdAt: string;
  _updatedAt: string;
  language: string | null;
  emailSubscription: {
    title?: string;
    description?: string;
    emailPlaceholder?: string;
    callToAction?: {
      label?: string;
    };
    disclaimerText?: string;
  } | null;
  copyrightText: string | null;
} | null;
// Variable: query
// Query: *[_type == "programBuilder" && type == $type && language == $language] | order(_createdAt desc) {    _id,    _type,    _createdAt,    _updatedAt,    language,    title,    type,    slug,    imagery,    seo {      metaTitle,      metaDescription,      ogImage {        asset-> {          _id,          url,          metadata {            dimensions,            lqip,            palette          }        },        hotspot,        crop      }    }  }
export type QueryResult = Array<{
  _id: string;
  _type: "programBuilder";
  _createdAt: string;
  _updatedAt: string;
  language: string | null;
  title: string | null;
  type: "diet" | "training" | null;
  slug: Slug | null;
  imagery: {
    splash?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    thumb?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
  } | null;
  seo: {
    metaTitle: string | null;
    metaDescription: string | null;
    ogImage: {
      asset: {
        _id: string;
        url: string | null;
        metadata: {
          dimensions: SanityImageDimensions | null;
          lqip: string | null;
          palette: SanityImagePalette | null;
        } | null;
      } | null;
      hotspot: SanityImageHotspot | null;
      crop: SanityImageCrop | null;
    } | null;
  } | null;
}>;

// Query TypeMap
import "@sanity/client";
declare module "@sanity/client" {
  interface SanityQueries {
    "{\n  \"hero\": *[_type == \"hero\" && language == $language][0] {\n    _id,\n    _type,\n    _createdAt,\n    _updatedAt,\n    language,\n    slogan\n  },\n  \"about\": *[_type == \"about\" && language == $language][0] {\n    _id,\n    _type,\n    _createdAt,\n    _updatedAt,\n    language,\n    description,\n    callToAction,\n    cards[] {\n      _key,\n      _type,\n      title,\n      description,\n      image {\n        asset-> {\n          _id,\n          url,\n          metadata {\n            dimensions,\n            lqip,\n            palette\n          }\n        },\n        hotspot,\n        crop\n      }\n    },\n    slogan\n  },\n  \"promo\": *[_type == \"promo\" && language == $language][0] {\n    _id,\n    _type,\n    _createdAt,\n    _updatedAt,\n    language,\n    slogan\n  },\n  \"reviews\": *[_type == \"reviews\" && language == $language][0] {\n    _id,\n    _type,\n    _createdAt,\n    _updatedAt,\n    language,\n    description,\n    reviews[]-> {\n      _id,\n      _type,\n      language,\n      person {\n        name,\n        surname,\n        occupation,\n        avatar {\n          asset-> {\n            _id,\n            url,\n            metadata {\n              dimensions,\n              lqip,\n              palette\n            }\n          },\n          hotspot,\n          crop\n        }\n      },\n      rating,\n      text\n    }\n  }\n}": LANDING_PAGE_QUERYResult;
    "*[_type == \"programBuilder\" && slug.current == $slug && language == $language][0] {\n  _id,\n  _type,\n  _createdAt,\n  _updatedAt,\n  language,\n  title,\n  type,\n  slug,\n  seo {\n    metaTitle,\n    metaDescription,\n    ogImage {\n      asset-> {\n        _id,\n        url,\n        metadata {\n          dimensions,\n          lqip,\n          palette\n        }\n      },\n      hotspot,\n      crop\n    }\n  },\n  content[] {\n    _key,\n    _type,\n    preview,\n    title,\n    \n    // AudienceBlock fields\n    _type == \"audienceBlock\" => {\n      audiences[] {\n        _key,\n        description,\n        image {\n          asset-> {\n            _id,\n            url,\n            metadata {\n              dimensions,\n              lqip,\n              palette\n            }\n          },\n          hotspot,\n          crop\n        }\n      }\n    },\n    \n    // FreeProgram fields\n    _type == \"freeProgram\" => {\n      description,\n      button {\n        text,\n        link\n      }\n    },\n    \n    // PricingPlans fields\n    _type == \"pricingPlans\" => {\n      durations[] {\n        _key,\n        title,\n        months,\n        isDefault\n      },\n      currency,\n      planTypes[] {\n        _key,\n        id,\n        title,\n        isPopular,\n        basePrice,\n        features[] {\n          _key,\n          text,\n          included\n        }\n      },\n      groupPlans[] {\n        _key,\n        people,\n        basePrice,\n        isDiscounted,\n        discountedPrice\n      }\n    },\n    \n    // SloganBlock fields\n    _type == \"sloganBlock\" => {\n      slogan\n    },\n    \n    // NumberedListWithImage fields\n    _type == \"numberedListWithImage\" => {\n      style,\n      items[] {\n        _key,\n        title,\n        description,\n        image {\n          asset-> {\n            _id,\n            url,\n            metadata {\n              dimensions,\n              lqip,\n              palette\n            }\n          },\n          hotspot,\n          crop\n        }\n      }\n    },\n    \n    // NumberedList fields\n    _type == \"numberedList\" => {\n      items[] {\n        _key,\n        title,\n        description\n      }\n    },\n    \n    // DetailedDescription fields\n    _type == \"detailedDescription\" => {\n      description\n    },\n    \n    // AdvantagesSimple fields\n    _type == \"advantagesSimple\" => {\n      advantages[] {\n        _key,\n        imageOnly,\n        title,\n        image {\n          asset-> {\n            _id,\n            url,\n            metadata {\n              dimensions,\n              lqip,\n              palette\n            }\n          },\n          hotspot,\n          crop\n        }\n      }\n    },\n    \n    // AdvantagesDetailed fields\n    _type == \"advantagesDetailed\" => {\n      advantages[] {\n        _key,\n        imageOnly,\n        title,\n        description,\n        image {\n          asset-> {\n            _id,\n            url,\n            metadata {\n              dimensions,\n              lqip,\n              palette\n            }\n          },\n          hotspot,\n          crop\n        }\n      }\n    }\n  }\n}": PROGRAM_BY_SLUG_QUERYResult;
    "*[_type == \"programBuilder\" && language == $language] | order(_createdAt desc) {\n  _id,\n  _type,\n  _createdAt,\n  _updatedAt,\n  language,\n  title,\n  type,\n  slug,\n  seo {\n    metaTitle,\n    metaDescription,\n    ogImage {\n      asset-> {\n        _id,\n        url,\n        metadata {\n          dimensions,\n          lqip,\n          palette\n        }\n      },\n      hotspot,\n      crop\n    }\n  }\n}": ALL_PROGRAMS_QUERYResult;
    "*[_type == \"footer\" && language == $language] | order(_createdAt desc)[0] {\n  _id,\n  _type,\n  _createdAt,\n  _updatedAt,\n  language,\n  emailSubscription,\n  copyrightText\n}": FOOTER_QUERYResult;
    "*[_type == \"programBuilder\" && type == $type && language == $language] | order(_createdAt desc) {\n    _id,\n    _type,\n    _createdAt,\n    _updatedAt,\n    language,\n    title,\n    type,\n    slug,\n    imagery,\n    seo {\n      metaTitle,\n      metaDescription,\n      ogImage {\n        asset-> {\n          _id,\n          url,\n          metadata {\n            dimensions,\n            lqip,\n            palette\n          }\n        },\n        hotspot,\n        crop\n      }\n    }\n  }": QueryResult;
  }
}
